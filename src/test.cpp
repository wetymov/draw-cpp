#include <iostream>
#include "class1.h"
#include "adopt.cpp"
#include "shapes.h"

using namespace std;

int main(int argc, char *argv[])
{
	setlocale(LC_ALL, "Russian");
	if(!init()) return 0;

	vector<Item*> fig;

	// --- Демонтрационные фигуры ---

	fig.push_back(new LineFigure(0, 0, 500, 250, 255, 128, 128));
	fig.push_back(new ArcFigure(150, 200, 120, 10, 123, 255, 0, 255));
	fig.push_back(new Segment(300, 200, 120, 0, 100, 155, 255, 0));
	fig.push_back(new Sector(300, 300, 120, 0, 270, 155, 255, 0));


	for (auto f : fig) {
		f->draw(true);
		cout << f->get_name() << endl;
		wait4mouse();
		f->move(50, 50);
		wait4mouse();
		f->draw(false);
		delete f;
	}

	vector<Figure*> figures;

	int x = 200;
	int y = 200;

	// --- "C++" ---
	figures.push_back(new ArcFigure(x, y, 40, 45, 315, 255, 0, 0));

	int dx = 80;

	figures.push_back(new LineFigure(x + dx, y - 20, 0, 40, 255, 0, 0));
	figures.push_back(new LineFigure(x + dx - 20, y, 40, 0, 255, 0, 0));

	figures.push_back(new LineFigure(x + dx * 2, y - 20, 0, 40, 255, 0, 0));
	figures.push_back(new LineFigure(x + dx * 2 - 20, y, 40, 0, 255, 0, 0)); 

	for (auto f : figures) {
		f->draw(true);
		wait4mouse();
	}
	
	leave();
	return 0;
}

/*
* нужно сделать базовый класс item просто отдельный, это класс должен быть базовым у всех фигур;
* в нем будет метод draw, который будет чисто виртуальным
* в нем будет метод move, который будет чисто виртуальным
* в нем будет метод get_type, который будет чисто виртуальным
* в нем будет метод get_name, который будет чисто виртуальным
* классы линия и дуга и для них базовый класс точка привязки (класс фигура, являющаяся родительской)
* класс как раз хранит координаты точки привязки, а линия - координаты относительно точки привязки
* Чтобы подвинуть линию надо подвинуть точку привязки
* Тоже самое с дугой, там гвоздь привязан к центру, центр задается относительно гвоздя
* Надо сделать несколько объектов линия, дуга
* Сделать массив указателей на точку привязки, присвоить им заданные линии и дуги
* Затем в цикле передвинуть все фигуры на определение значения (влево/вправо/вверх/вниз), то есть сделать move - метод в фигуре - стереть старую линию,

Затем в цикле передвинуть все фигуры на определение значения (влево/вправо/вверх/вниз), то есть сделать move - метод в фигуре - стереть старую линию,
поменять точку привязки, нарисовать новую линию
Функция draw с флагом false/true где false - стереть, true - нарисовать;
Уничтожить хорошо бы что-нибудь еще
Код должен быть коротенький
Дальше реализовать сегмент как единую фигуру - производный от линии и дуги, надо как-то две точки привязки сократить до одной,
фигура должна наследоваться виртуально
сделать сектор по аналогии с сегментом (две линии и дуга)
короче список и там каждый объект себя расписывает по содержимому я линия я дуга я сектор я сегмент, при удалении оно должно удаляться
*/